# Copyright 2020-2022 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Vineyard Operator

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - ".github/workflows/vineyard-operator.yaml"
      - "k8s/**"
      - "src/server/util/kubectl*"
  pull_request:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - ".github/workflows/vineyard-operator.yaml"
      - "k8s/**"
      - "src/server/util/kubectl*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      IMG: docker.pkg.github.com/v6d-io/v6d/vineyard-operator
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.18.0"

      - name: Golang format and lint
        run: |
          cd k8s
          make golint
          if [ $? -ne ]; then
              echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
              echo "| golangci-lint (golang format) failures found!"
              echo "|"
              echo "|    ${GOPATH}/bin/golangci-lint run ./... --fix"
              echo "|"
              echo "| to fix this error."
              echo "|"
              echo "| The tool golangci-lint can be installed by"
              echo "|"
              echo "|    go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest"
              echo "|"
              echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
              exit -1
          fi

      - name: Login docker registry
        if: ${{ (github.ref == 'refs/heads/main' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))) && github.repository == 'v6d-io/v6d' }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login https://docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin

      - name: Upload docker image as nightly
        if: ${{ github.ref == 'refs/heads/main' && github.repository == 'v6d-io/v6d' }}
        run: |
          cd k8s
          sudo make docker-build IMG=${IMG}:${{ github.sha }}
          sudo docker tag ${IMG}:${{ github.sha }} ${IMG}:nightly
          sudo docker push ${IMG}:nightly

      - name: Extract tag name
        id: tag
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Publish docker images for releases
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && github.repository == 'v6d-io/v6d' }}
        run: |
          cd k8s
          sudo make docker-build IMG=${IMG}:${{ github.sha }}
          sudo docker tag ${IMG}:${{ github.sha }} ${IMG}:latest
          sudo docker push ${IMG}:latest

  vineyardd-e2e-tests:
    name: e2e tests(vineyardd)
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run E2E Test(vineyardd)
        uses: apache/skywalking-infra-e2e@afdf1cca0519d65bc480d8680b7a27f9b41fc421 # always prefer to use a revision instead of `main`.
        with:
          e2e-file: k8s/test/e2e/vineyardd/e2e.yaml

  serialize-e2e-tests:
    name: e2e tests(serialize)
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run E2E Test(serialize)
        uses: apache/skywalking-infra-e2e@afdf1cca0519d65bc480d8680b7a27f9b41fc421 # always prefer to use a revision instead of `main`.
        with:
          e2e-file: k8s/test/e2e/serialize/e2e.yaml

  spill-e2e-tests:
    name: e2e tests(spill)
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run E2E Test(spill)
        uses: apache/skywalking-infra-e2e@afdf1cca0519d65bc480d8680b7a27f9b41fc421 # always prefer to use a revision instead of `main`.
        with:
          e2e-file: k8s/test/e2e/spill/e2e.yaml

  released-operator-e2e-tests:
    name: e2e tests(released-operator)
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run E2E Test(released-operator)
        uses: apache/skywalking-infra-e2e@afdf1cca0519d65bc480d8680b7a27f9b41fc421 # always prefer to use a revision instead of `main`.
        with:
          e2e-file: k8s/test/e2e/released-operator/e2e.yaml

  local-assembly-e2e-tests:
    name: e2e tests(local-assembly)
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run E2E Test(local-assembly)
        uses: apache/skywalking-infra-e2e@afdf1cca0519d65bc480d8680b7a27f9b41fc421 # always prefer to use a revision instead of `main`.
        with:
          e2e-file: k8s/test/e2e/assembly/local-assembly-e2e.yaml

  distributed-assembly-e2e-tests:
    name: e2e tests(distributed-assembly)
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run E2E Test(distributed-assembly)
        uses: apache/skywalking-infra-e2e@afdf1cca0519d65bc480d8680b7a27f9b41fc421 # always prefer to use a revision instead of `main`.
        with:
          e2e-file: k8s/test/e2e/assembly/distributed-assembly-e2e.yaml
