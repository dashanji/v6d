# Copyright 2020-2022 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM ubuntu:20.04 as builder

ADD . /work/v6d

ENV DEBIAN_FRONTEND noninteractive

# build environment
RUN chmod -R a+wrx /tmp &&\
    apt-get update -y && \
    apt install -y ca-certificates \
    ccache \
    cmake \
    curl \
    doxygen \
    fuse3 \
    git \
    libboost-all-dev \
    libcurl4-openssl-dev \
    libfuse3-dev \
    libgflags-dev \
    libgoogle-glog-dev \
    libgmock-dev \
    libgrpc-dev \
    libgrpc++-dev \
    libgtest-dev \
    libkrb5-dev \
    libmpich-dev \
    libprotobuf-dev \
    librdkafka-dev \
    libgsasl7-dev \
    librdkafka-dev \
    libssl-dev \
    libunwind-dev \
    libxml2-dev \
    libz-dev \
    lsb-release \
    pandoc \
    protobuf-compiler-grpc \
    python3-pip \
    python3 \
    uuid-dev \
    wget && \
    # install apache-arrow
    wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb &&\
    apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb &&\
    apt update &&\
    apt install -y libarrow-dev=3.0.0-1 libparquet-dev=3.0.0-1 libarrow-python-dev=3.0.0-1 &&\
    # install pyarrow from scratch
    pip3 install --no-binary pyarrow pyarrow==3.0.0 &&\
    # install python packages for codegen, and io adaptors
    pip3 install -U "Pygments>=2.4.1" &&\
    cd /work/v6d &&\
    pip3 install -r requirements-setup.txt -r requirements.txt -r requirements-dev.txt &&\
    # install linters
    pip3 install auditwheel black isort flake8 twine &&\
    # install clang-format
    curl -L https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-22538c65/clang-format-8_linux-amd64 --output /usr/bin/clang-format &&\
    chmod +x /usr/bin/clang-format

# install libgrape-lite
RUN git clone https://github.com/alibaba/libgrape-lite.git &&\
    cd libgrape-lite &&\
    mkdir build &&\
    cd build &&\
    cmake .. &&\
    make -j`nproc` &&\
    make install

# install libhdfs3
RUN git clone https://github.com/ContinuumIO/libhdfs3-downstream.git &&\
    cd libhdfs3-downstream/libhdfs3 &&\
    mkdir build &&\
    cd build &&\
    cmake .. &&\
    make -j`nproc` &&\
    make install

# build vineyard
RUN cd /work/v6d &&\ 
    mkdir build &&\
    cd build &&\
    cmake .. -DCMAKE_BUILD_TYPE=Release \
             -DBUILD_SHARED_LIBS=ON &&\
    make -j`nproc` && \
    make vineyard_client_python -j`nproc` && \
    make install && \
    cd .. &&\ 
    python3 setup.py bdist_wheel &&\
    python3 setup_io.py bdist_wheel &&\
    twine check dist/*.whl

FROM python:3.8

COPY --from=builder /work/v6d/dist/* /tmp/
COPY --from=builder /work/v6d/build/shared-lib/* /lib/

COPY --from=builder /usr/lib/x86_64-linux-gnu/libunwind* /lib/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libre2* /lib/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libarrow* /lib/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libsnappy* /lib/

RUN cd /tmp &&\
    pip3 install --no-cache-dir *.whl ipython
    

ENTRYPOINT ["/bin/bash", "-l", "-c" ]